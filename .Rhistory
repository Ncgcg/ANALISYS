for (i in 1:length(data)){
data[[i]]$session <- as.factor(data[[i]]$session)
data[[i]] |> filter(Cq > 0) |> group_by(name, session) |>
summarise(group = unique(group), Cq = mean(Cq),
session = unique(session), eff = mean(eff),
threshold = mean(threshold)) -> data[[i]]
}
## N0
for (i in 1:length(data)){
data[[i]]$N0 <- data[[i]]$threshold/(data[[i]]$eff)^data[[i]]$Cq
}
## N0 OUTLIERS
for (i in 1:length(data)){
mad <- mad(data[[i]]$N0)
Lower <- median(data[[i]]$N0) - 3*mad
Upper <- median(data[[i]]$N0) + 3*mad
data[[i]] <- subset(data[[i]], data[[i]]$N0 > Lower & data[[i]]$N0 < Upper)
}
dim(data[[4]])
dim(data[[5]])
dim(data[[1]])
for (i in 1:length(data)){
data[[i]] |> group_by(name) |>
summarise(group = unique(group), N0 = mean(N0)) -> data[[i]]
}
dim(data[[5]])
## PREVIEW
for (i in 1:length(data)){
print(ggplot(data[[i]], aes(x = group, y = N0, col = group))+
geom_boxplot()+
labs(title = names(data)[i], x = 'group', y = 'N0'))
}
# NORMALIZATION -----
## TBP ADDITION
data[12] <- data[5]
for (i in 1:length(data)){
list(data[[12]], data[[i]])|> reduce(full_join, by = c('name', 'group')) |>
ungroup() |> drop_na(N0.x, N0.y) -> data[[i]]
}
data <- data[-c(5, 12)]
## NORMALIZED EXPRESSION
for (i in 1:length(data)){
data[[i]]$dc <- data[[i]]$N0.y/data[[i]]$N0.x
}
## MEDIAN SUBTRACTION
for (i in 1:length(data)){
data[[i]] |> filter(group == 'Adjacent') |> select (dc) |> drop_na() |>
as.list() |> lapply(median) -> m
data[[i]]$ddc <- data[[i]]$dc - m[[1]]
}
dim(data[[1]])
for (i in 1:length(data)){
names(data)[[i]] |> print()
data[[i]] |> group_by(group) |> summarise(n=n()) |> print()
}
# ANALISYS 1 -----
## PREVIEW
for (i in 1:length(data)){
print(ggplot(data[[i]], aes(x = group, y = dc))+
geom_boxplot()+
labs(title = names(data)[[i]], x = 'group', y = 'NE'))
}
## OUTLIERS
for (i in 1:length(data)){
mad <- mad(data[[i]]$ddc)
Lower <- median(data[[i]]$ddc) - 3*mad
Upper <- median(data[[i]]$ddc) + 3*mad
data[[i]] <- subset(data[[i]], data[[i]]$ddc > Lower & data[[i]]$ddc < Upper)
}
for (i in 1:length(data)){
names(data)[[i]] |> print()
data[[i]] |> group_by(group) |> summarise(n=n()) |> print()
}
dim(data[[1]])
# ANALISYS 1 -----
## PREVIEW
for (i in 1:length(data)){
print(ggplot(data[[i]], aes(x = group, y = dc))+
geom_boxplot()+
labs(title = names(data)[[i]], x = 'group', y = 'NE'))
}
## NORMALITY
shapiro <- function(tib){
groups <- c('Adjacent', 'Luminal A', 'Luminal B HER-',
'Luminal B HER+', 'HER-Enriched', 'Triple Negative')
for(i in groups){
print(i)
tib |> filter(group == i) |> ungroup() |> shapiro_test(dc) |> print()
}
}
## NORMALITY
shapiro <- function(tib){
groups <- c('Adjacent', 'Luminal A', 'Luminal B HER-',
'Luminal B HER+', 'HER-Enriched', 'Triple Negative')
for(i in groups){
print(i)
tib |> filter(group == i) |> ungroup() |> shapiro_test(ddc) |> print()
}
}
for (i in 1:length(data)){
names(data)[[i]] |> print()
shapiro(data[[i]])
}
for (i in 1:length(data)){
names(data)[[i]] |> print()
data[[i]] |> group_by(group) |> summarise(n=n()) |> print()
}
# UPLOAD -----
data <- list.files(pattern = "*.csv", full.names = F) |>
lapply(read_csv) |> array(dimnames = list(
matrix.names = c("AMPH", "BIN", "CR16", "NWASP", "TBP",
"TKS4", "TKS4b", "TKS4L", "TKS5L", "TTP", "WIP")))
# PRE ANALYSIS -----
##
for (i in 1:length(data)){
data[[i]]$session <- as.factor(data[[i]]$session)
data[[i]] |> filter(Cq > 0) |> group_by(name, session) |>
summarise(group = unique(group), Cq = mean(Cq),
session = unique(session), eff = mean(eff),
threshold = mean(threshold)) -> data[[i]]
}
## N0
for (i in 1:length(data)){
data[[i]]$N0 <- data[[i]]$threshold/(data[[i]]$eff)^data[[i]]$Cq
}
dim(data[[5]])
for (i in 1:length(data)){
data[[i]] |> group_by(name) |>
summarise(group = unique(group), N0 = mean(N0)) -> data[[i]]
}
dim(data[[5]])
## PREVIEW
for (i in 1:length(data)){
print(ggplot(data[[i]], aes(x = group, y = N0, col = group))+
geom_boxplot()+
labs(title = names(data)[i], x = 'group', y = 'N0'))
}
# NORMALIZATION -----
## TBP ADDITION
data[12] <- data[5]
for (i in 1:length(data)){
list(data[[12]], data[[i]])|> reduce(full_join, by = c('name', 'group')) |>
ungroup() |> drop_na(N0.x, N0.y) -> data[[i]]
}
data <- data[-c(5, 12)]
## NORMALIZED EXPRESSION
for (i in 1:length(data)){
data[[i]]$dc <- data[[i]]$N0.y/data[[i]]$N0.x
}
## MEDIAN SUBTRACTION
for (i in 1:length(data)){
data[[i]] |> filter(group == 'Adjacent') |> select (dc) |> drop_na() |>
as.list() |> lapply(median) -> m
data[[i]]$ddc <- data[[i]]$dc - m[[1]]
}
for (i in 1:length(data)){
names(data)[[i]] |> print()
data[[i]] |> group_by(group) |> summarise(n=n()) |> print()
}
# ANALISYS 1 -----
## PREVIEW
for (i in 1:length(data)){
print(ggplot(data[[i]], aes(x = group, y = dc))+
geom_boxplot()+
labs(title = names(data)[[i]], x = 'group', y = 'NE'))
}
## OUTLIERS
for (i in 1:length(data)){
mad <- mad(data[[i]]$ddc)
Lower <- median(data[[i]]$ddc) - 3*mad
Upper <- median(data[[i]]$ddc) + 3*mad
data[[i]] <- subset(data[[i]], data[[i]]$ddc > Lower & data[[i]]$ddc < Upper)
}
for (i in 1:length(data)){
names(data)[[i]] |> print()
data[[i]] |> group_by(group) |> summarise(n=n()) |> print()
}
dim(data[[1]])
# ANALISYS 1 -----
## PREVIEW
for (i in 1:length(data)){
print(ggplot(data[[i]], aes(x = group, y = dc))+
geom_boxplot()+
labs(title = names(data)[[i]], x = 'group', y = 'NE'))
}
for (i in 1:length(data)){
names(data)[[i]] |> print()
shapiro(data[[i]])
}
for (i in 1:length(data)){
names(data)[i] |> print()
data[[i]] |> wilcox_test(ddc ~ group) |> print()
}
## TESTS BOOTSTRAP
for (i in 1:length(data)){
names(data)[i] |> print()
#data |> WRS2::t1waybt(formula = ddc ~ group) |> print()
data[[i]] |> WRS2::mcppb20(formula = ddc ~ group, nboot = 5000) |> print()
#data |> WRS2::Qanova(formula = ddc ~ group) |> print()
}
## TESTS BOOTSTRAP
for (i in 1:length(data)){
names(data)[i] |> print()
#data |> WRS2::t1waybt(formula = ddc ~ group) |> print()
#data[[i]] |> WRS2::mcppb20(formula = ddc ~ group, nboot = 5000) |> print()
data[[i]] |> WRS2::Qanova(formula = ddc ~ group) |> print()
}
## TESTS BOOTSTRAP
for (i in 1:length(data)){
names(data)[i] |> print()
data |> WRS2::t1waybt(formula = ddc ~ group) |> print()
#data[[i]] |> WRS2::mcppb20(formula = ddc ~ group, nboot = 5000) |> print()
#data[[i]] |> WRS2::Qanova(formula = ddc ~ group) |> print()
}
## TESTS BOOTSTRAP
for (i in 1:length(data)){
names(data)[i] |> print()
data[[i]] |> WRS2::t1waybt(formula = ddc ~ group) |> print()
#data[[i]] |> WRS2::mcppb20(formula = ddc ~ group, nboot = 5000) |> print()
#data[[i]] |> WRS2::Qanova(formula = ddc ~ group) |> print()
}
## TESTS BOOTSTRAP
for (i in 1:length(data)){
names(data)[i] |> print()
data[[i]] |> WRS2::t1waybt(formula = ddc ~ group, nboot = 5000) |> print()
#data[[i]] |> WRS2::mcppb20(formula = ddc ~ group, nboot = 5000) |> print()
#data[[i]] |> WRS2::Qanova(formula = ddc ~ group) |> print()
}
# ANALISTS 2 -----
## MERGE
dt <- list()
for (i in 1:length(data)){
dt[[i]] <- data[[i]] |> select(name, group, ddc)
colnames(dt[[i]]) <- c('name', 'group', names(data)[i])
}
dt|> reduce(full_join, by = c('name', 'group')) |>
ungroup() -> dt
## CORRELATIONS
GGally::ggpairs(dt[3:12])
WRS2::pbcor(dt$TKS5L, dt$TKS4L)
WRS2::wincor(dt$TKS5L, dt$TKS4L)
WRS2::winall(dt)
WRS2::winall(dt$TKS5L, dt$TKS4L)
WRS2::wincor(dt$TKS5L, dt$TKS4L)
## TRASH
dt |> WRS2::t1way(formula = TKS4 ~ TKS4L)
## DIMENTIONALITY REDUCTION
dt[-c(4, 7, 8, 11, 13)] |> drop_na() -> X
## DIMENTIONALITY REDUCTION
dt[-c(4, 7, 8, 11)] |> drop_na() -> X
pca <- prcomp(X[, 3:length(X)], scale. = T, center = T)
tsne <- Rtsne::Rtsne(X[, 3:length(X)], perplexity = 5)
pcadata <- cbind(X[, 1:2], pca$x)
tsnedata <- data.frame(X[,1:2],
x = tsne$Y[,1],
y = tsne$Y[,2])
ggplot(pcadata, aes(col = group))+
geom_point(aes(x=PC1, y = PC2))
ggplot(tsnedata, aes(col = group))+
geom_point(aes(x=x,y=y))
pca <- prcomp(X[, 3:length(X)], scale. = T, center = T)
tsne <- Rtsne::Rtsne(X[, 3:length(X)], perplexity = 5)
pcadata <- cbind(X[, 1:2], pca$x)
tsnedata <- data.frame(X[,1:2],
x = tsne$Y[,1],
y = tsne$Y[,2])
ggplot(pcadata, aes(col = group))+
geom_point(aes(x=PC1, y = PC2))
ggplot(tsnedata, aes(col = group))+
geom_point(aes(x=x,y=y))
## TRASH
dt$R <- dt$TKS4L/dt$TKS4b
## TESTS NOVICE LEVEL
for (i in 1:length(data)){
names(data)[i] |> print()
data[[i]] |> anova_test(group ~ ddc) |> print()
}
dt |> WRS2::t1way(formula = R ~ group)
## TRASH
dt$R <- dt$BIN/dt$WIP
dt |> WRS2::t1way(formula = R ~ group)
## TRASH
dt$R <- dt$BIN/dt$NWASP
dt |> WRS2::t1way(formula = R ~ group)
## TRASH
dt$R <- dt$TKS4L/dt$TKS4
dt |> WRS2::t1way(formula = R ~ group)
## TRASH
dt$R <- dt$TKS4L/dt$TKS5L
dt |> WRS2::t1way(formula = R ~ group)
## TRASH
dt$R <- dt$CR16/dt$WIP
dt |> WRS2::t1way(formula = R ~ group)
dt |> WRS2::Qanova(formula = R ~ group)
## TRASH
dt$R <- dt$CR16/dt$NWASP
dt |> WRS2::t1way(formula = R ~ group)
## CORRELATIONS
GGally::ggpairs(dt[3:12])
## TRASH
dt$R <- dt$TKS4L/dt$TTP
dt |> WRS2::t1way(formula = R ~ group)
## TRASH
dt$R <- dt$AMPH/dt$BIN
dt |> WRS2::t1way(formula = R ~ group)
## TRASH
dt$R <- dt$WIP/dt$BIN
dt |> WRS2::t1way(formula = R ~ group)
dt |> WRS2::Qanova(formula = R ~ group)
## TRASH
dt$R <- dt$NWASP/dt$TTP
dt |> WRS2::t1way(formula = R ~ group)
## TRASH
dt$R <- dt$NWASP/dt$BIN
dt |> WRS2::t1way(formula = R ~ group)
dt |> WRS2::Qanova(formula = R ~ group)
## TRASH
dt$R <- dt$AMPH/dt$TKS5L
dt |> WRS2::t1way(formula = R ~ group)
## TRASH
dt$R <- dt$NWASP/dt$TKS4
dt |> WRS2::t1way(formula = R ~ group)
## TRASH
dt$R <- dt$TKS4b/dt$TKS4L
dt |> WRS2::t1way(formula = R ~ group)
## TRASH
dt$R <- dt$TKS4b/dt$Bin
## TRASH
dt$R <- dt$TKS4b/dt$BIN
dt |> WRS2::t1way(formula = R ~ group)
## TRASH
dt$R <- dt$TKS4L/dt$BIN
dt |> WRS2::t1way(formula = R ~ group)
## TRASH
dt$R <- dt$TKS4/dt$BIN
dt |> WRS2::t1way(formula = R ~ group)
## TRASH
dt$R <- dt$WIP/dt$CR16
dt |> WRS2::t1way(formula = R ~ group)
## TRASH
dt$R <- dt$BIN/dt$CR16
dt |> WRS2::t1way(formula = R ~ group)
## TRASH
dt$R <- dt$AMPH/dt$CR16
dt |> WRS2::t1way(formula = R ~ group)
## TRASH
dt$R <- dt$TKS4L/dt$CR16
dt |> WRS2::t1way(formula = R ~ group)
## TRASH
dt$R <- dt$TKS4b/dt$CR16
dt |> WRS2::t1way(formula = R ~ group)
## TRASH
dt$R <- dt$TKS4/dt$CR16
dt |> WRS2::t1way(formula = R ~ group)
## TRASH
dt$R <- dt$NWASP/dt$CR16
dt |> WRS2::t1way(formula = R ~ group)
dt |> WRS2::t1way(formula = TKS4L ~ TKS4)
dt |> WRS2::t1way(formula = TKS4L + TKS4b ~ TKS4)
dt |> WRS2::t2way(formula = TKS4 ~ TKS4L)
library(WRS2)
## DIMENTIONALITY REDUCTION
dt[-c(4, 6, 8, 9)] |> drop_na() -> X
## DIMENTIONALITY REDUCTION
dt[-c(4, 6, 8, 9, 11)] |> drop_na() -> X
View(dt)
## DIMENTIONALITY REDUCTION
dt[-c(4, 6, 8, 9, 13)] |> drop_na() -> X
## DIMENTIONALITY REDUCTION
dt[-c(4, 6, 8, 9, 11, 13)] |> drop_na() -> X
pca <- prcomp(X[, 3:length(X)], scale. = T, center = T)
tsne <- Rtsne::Rtsne(X[, 3:length(X)], perplexity = 5)
pcadata <- cbind(X[, 1:2], pca$x)
tsnedata <- data.frame(X[,1:2],
x = tsne$Y[,1],
y = tsne$Y[,2])
ggplot(pcadata, aes(col = group))+
geom_point(aes(x=PC1, y = PC2))
ggplot(tsnedata, aes(col = group))+
geom_point(aes(x=x,y=y))
tsne <- Rtsne::Rtsne(X[, 3:length(X)], perplexity = 10)
tsne <- Rtsne::Rtsne(X[, 3:length(X)], perplexity = 8)
pcadata <- cbind(X[, 1:2], pca$x)
tsnedata <- data.frame(X[,1:2],
x = tsne$Y[,1],
y = tsne$Y[,2])
ggplot(pcadata, aes(col = group))+
geom_point(aes(x=PC1, y = PC2))
ggplot(tsnedata, aes(col = group))+
geom_point(aes(x=x,y=y))
tsne <- Rtsne::Rtsne(X[, 3:length(X)], perplexity = 7)
tsnedata <- data.frame(X[,1:2],
x = tsne$Y[,1],
y = tsne$Y[,2])
ggplot(tsnedata, aes(col = group))+
geom_point(aes(x=x,y=y))
tsne <- Rtsne::Rtsne(X[, 3:length(X)], perplexity = 7)
tsnedata <- data.frame(X[,1:2],
x = tsne$Y[,1],
y = tsne$Y[,2])
ggplot(tsnedata, aes(col = group))+
geom_point(aes(x=x,y=y))
## DIMENTIONALITY REDUCTION
dt[-c(4, 5, 6, 8, 9, 11, 13)] |> drop_na() -> X
pca <- prcomp(X[, 3:length(X)], scale. = T, center = T)
tsne <- Rtsne::Rtsne(X[, 3:length(X)], perplexity = 7)
pcadata <- cbind(X[, 1:2], pca$x)
tsnedata <- data.frame(X[,1:2],
x = tsne$Y[,1],
y = tsne$Y[,2])
ggplot(pcadata, aes(col = group))+
geom_point(aes(x=PC1, y = PC2))
ggplot(tsnedata, aes(col = group))+
geom_point(aes(x=x,y=y))
tsne <- Rtsne::Rtsne(X[, 3:length(X)], perplexity = 7)
tsnedata <- data.frame(X[,1:2],
x = tsne$Y[,1],
y = tsne$Y[,2])
ggplot(tsnedata, aes(col = group))+
geom_point(aes(x=x,y=y))
## DIMENTIONALITY REDUCTION
dt[-c(4, 6, 8, 9, 11, 13)] |> drop_na() -> X
## DIMENTIONALITY REDUCTION
dt[-c(4, 8, 9, 11, 13)] |> drop_na() -> X
pca <- prcomp(X[, 3:length(X)], scale. = T, center = T)
tsne <- Rtsne::Rtsne(X[, 3:length(X)], perplexity = 7)
pcadata <- cbind(X[, 1:2], pca$x)
tsnedata <- data.frame(X[,1:2],
x = tsne$Y[,1],
y = tsne$Y[,2])
ggplot(pcadata, aes(col = group))+
geom_point(aes(x=PC1, y = PC2))
ggplot(tsnedata, aes(col = group))+
geom_point(aes(x=x,y=y))
## TESTS BOOTSTRAP
for (i in 1:length(data)){
names(data)[i] |> print()
#data[[i]] |> t1waybt(formula = ddc ~ group, nboot = 5000) |> print()
#data[[i]] |> mcppb20(formula = ddc ~ group, nboot = 5000) |> print()
data[[i]] |> Qanova(formula = ddc ~ group) |> print()
}
## DIMENTIONALITY REDUCTION
dt[-c(8, 9, 11, 13)] |> drop_na() -> X
pca <- prcomp(X[, 3:length(X)], scale. = T, center = T)
tsne <- Rtsne::Rtsne(X[, 3:length(X)], perplexity = 7)
tsne <- Rtsne::Rtsne(X[, 3:length(X)], perplexity = 5)
tsne <- Rtsne::Rtsne(X[, 3:length(X)], perplexity = 4)
pcadata <- cbind(X[, 1:2], pca$x)
tsnedata <- data.frame(X[,1:2],
x = tsne$Y[,1],
y = tsne$Y[,2])
ggplot(pcadata, aes(col = group))+
geom_point(aes(x=PC1, y = PC2))
ggplot(tsnedata, aes(col = group))+
geom_point(aes(x=x,y=y))
## DIMENTIONALITY REDUCTION
dt[-c(4, 5, 8, 9, 11, 13)] |> drop_na() -> X
pca <- prcomp(X[, 3:length(X)], scale. = T, center = T)
tsne <- Rtsne::Rtsne(X[, 3:length(X)], perplexity = 4)
pcadata <- cbind(X[, 1:2], pca$x)
tsnedata <- data.frame(X[,1:2],
x = tsne$Y[,1],
y = tsne$Y[,2])
ggplot(pcadata, aes(col = group))+
geom_point(aes(x=PC1, y = PC2))
ggplot(tsnedata, aes(col = group))+
geom_point(aes(x=x,y=y))
tsne <- Rtsne::Rtsne(X[, 3:length(X)], perplexity = 7)
tsnedata <- data.frame(X[,1:2],
x = tsne$Y[,1],
y = tsne$Y[,2])
ggplot(tsnedata, aes(col = group))+
geom_point(aes(x=x,y=y))
## DIMENTIONALITY REDUCTION
dt[-c(4, 5, 8, 9, 13)] |> drop_na() -> X
pca <- prcomp(X[, 3:length(X)], scale. = T, center = T)
tsne <- Rtsne::Rtsne(X[, 3:length(X)], perplexity = 7)
tsne <- Rtsne::Rtsne(X[, 3:length(X)], perplexity = 4)
pcadata <- cbind(X[, 1:2], pca$x)
tsnedata <- data.frame(X[,1:2],
x = tsne$Y[,1],
y = tsne$Y[,2])
ggplot(pcadata, aes(col = group))+
geom_point(aes(x=PC1, y = PC2))
ggplot(tsnedata, aes(col = group))+
geom_point(aes(x=x,y=y))
## DIMENTIONALITY REDUCTION
dt[-c()] |> drop_na() -> X
## DIMENTIONALITY REDUCTION
dt[-c(13)] |> drop_na() -> X
pca <- prcomp(X[, 3:length(X)], scale. = T, center = T)
pcadata <- cbind(X[, 1:2], pca$x)
ggplot(pcadata, aes(col = group))+
geom_point(aes(x=PC1, y = PC2))
## DIMENTIONALITY REDUCTION
dt[-c(8, 9, 13)] |> drop_na() -> X
pca <- prcomp(X[, 3:length(X)], scale. = T, center = T)
pcadata <- cbind(X[, 1:2], pca$x)
ggplot(pcadata, aes(col = group))+
geom_point(aes(x=PC1, y = PC2))
## DIMENTIONALITY REDUCTION
dt[-c(8, 9, 11, 13)] |> drop_na() -> X
pca <- prcomp(X[, 3:length(X)], scale. = T, center = T)
pcadata <- cbind(X[, 1:2], pca$x)
ggplot(pcadata, aes(col = group))+
geom_point(aes(x=PC1, y = PC2))
tsne <- Rtsne::Rtsne(X[, 3:length(X)], perplexity = 4)
tsnedata <- data.frame(X[,1:2],
x = tsne$Y[,1],
y = tsne$Y[,2])
ggplot(tsnedata, aes(col = group))+
geom_point(aes(x=x,y=y))
